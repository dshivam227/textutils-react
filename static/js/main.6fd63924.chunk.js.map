{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","msg","App","setmode","_useState3","_useState4","setalert","showalert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6fd63924.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n           \r\n           \r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log('Uppercase was click' +text);  \r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\")\r\n    //     setTimeout(() => {\r\n    //         document.title='Virus Found!';\r\n    //     }, 2000);\r\n    //     setTimeout(() => {\r\n    //         document.title='Install Now';\r\n            \r\n    //     }, 1500);\r\n    }\r\n    const handletoClick = () => {\r\n        // console.log('Uppercase was click' +text);  \r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n\r\n    }\r\n    const clearText = () => {\r\n        // console.log('Uppercase was click' +text);  \r\n        let newText=\"\";\r\n        setText(newText);\r\n\r\n    }\r\n    const changetoItalic = () => {\r\n        // console.log('Uppercase was click' +text);  \r\n        let newText=text;\r\n        setText(newText);\r\n\r\n    }\r\n    const handleonChange = (event) => {\r\n        // console.log(\"onchange\");\r\n       \r\n        setText(event.target.value);\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading} </h1>\r\n            {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control\" id=\"myBox\" value={text} onChange= {handleonChange} style={{backgroundColor: props.mode==='dark'?'gray':'white'}}rows=\"8\"></textarea>\r\n            <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handletoClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={changetoItalic}>Convert to Italic</button>\r\n            <button className=\"btn btn-primary \" onClick={clearText}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(\" \").length} words,{text.length} characters</p>\r\n            <p>{0.008* text.split(\" \").length} minutes read</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert &&\r\n\r\n        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n <strong>{props.alert.type}</strong> {props.alert.msg}\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert('null');\n    }, 2000);\n  }\n const toggleMode=()=>{\nif(mode==='light'){\n  setmode('dark');\n  document.body.style.backgroundColor='gray';\n  showalert(\"dark mode has been enable\",\"success\");\n}\nelse{\n  setmode('light');\n  document.body.style.backgroundColor='white';\n}\n  }\n  return (\n    <>\n    {/* <Router> */}\n  <Navbar title=\"Shivam Dubey\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route path=\"/\"> */}\n              <TextForm showAlert={showalert}heading =\"Enter your text to analyse!\" mode={mode}/>\n\n            {/* <Home /> */}\n          {/* </Route>\n        </Switch> */}\n  {/* <About/> */}\n\n  </div>\n{/* </Router> */}\n  </>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}